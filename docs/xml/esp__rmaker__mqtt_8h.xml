<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="esp__rmaker__mqtt_8h" kind="file" language="C++">
    <compoundname>esp_rmaker_mqtt.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">esp_err.h</includes>
    <includes refid="esp__rmaker__mqtt__glue_8h" local="no">esp_rmaker_mqtt_glue.h</includes>
    <incdepgraph>
      <node id="11">
        <label>/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h</label>
        <link refid="esp_rmaker_mqtt.h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>esp_err.h</label>
      </node>
      <node id="14">
        <label>esp_rmaker_mqtt_glue.h</label>
        <link refid="esp__rmaker__mqtt__glue_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>esp_event.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1aabd147fb879d3bbc5682b451bc0694bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structesp__rmaker__mqtt__conn__params__t" kindref="compound">esp_rmaker_mqtt_conn_params_t</ref> *</type>
        <definition>esp_rmaker_mqtt_conn_params_t* esp_rmaker_mqtt_get_conn_params</definition>
        <argsstring>(void)</argsstring>
        <name>esp_rmaker_mqtt_get_conn_params</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a227bfa64564e9f406e3907a657890951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_init</definition>
        <argsstring>(esp_rmaker_mqtt_conn_params_t *conn_params)</argsstring>
        <name>esp_rmaker_mqtt_init</name>
        <param>
          <type><ref refid="structesp__rmaker__mqtt__conn__params__t" kindref="compound">esp_rmaker_mqtt_conn_params_t</ref> *</type>
          <declname>conn_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize ESP RainMaker MQTT</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>The MQTT configuration data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1ae99fd65e236eff7919aba8d327eaa017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void esp_rmaker_mqtt_deinit</definition>
        <argsstring>(void)</argsstring>
        <name>esp_rmaker_mqtt_deinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1ac28ab9ce7d0246a0d4f218a9770a1e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_connect</definition>
        <argsstring>(void)</argsstring>
        <name>esp_rmaker_mqtt_connect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MQTT Connect</para><para>Starts the connection attempts to the MQTT broker as per the configuration provided during initializing. This should ideally be called after successful network connection.</para><para><simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1afdea55b0937361e60f0c5c41e130b13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_disconnect</definition>
        <argsstring>(void)</argsstring>
        <name>esp_rmaker_mqtt_disconnect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MQTT Disconnect</para><para>Disconnects from the MQTT broker.</para><para><simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a13512de64cb916ac92bc221bc81b1c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_publish</definition>
        <argsstring>(const char *topic, void *data, size_t data_len, uint8_t qos, int *msg_id)</argsstring>
        <name>esp_rmaker_mqtt_publish</name>
        <param>
          <type>const char *</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>qos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>msg_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Publish MQTT Message</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">topic</parametername>
</parameternamelist>
<parameterdescription>
<para>The MQTT topic on which the message should be published. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be published </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">qos</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of Service for the Publish. Can be 0, 1 or 2. Also depends on what the MQTT broker supports.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1aa48f5e3d40da903d84cd7467ef66a1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_subscribe</definition>
        <argsstring>(const char *topic, esp_rmaker_mqtt_subscribe_cb_t cb, uint8_t qos, void *priv_data)</argsstring>
        <name>esp_rmaker_mqtt_subscribe</name>
        <param>
          <type>const char *</type>
          <declname>topic</declname>
        </param>
        <param>
          <type>esp_rmaker_mqtt_subscribe_cb_t</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>qos</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>priv_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subscribe to MQTT topic</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">topic</parametername>
</parameternamelist>
<parameterdescription>
<para>The topic to be subscribed to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to be invoked when a message is received on the given topic. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priv_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional private data to be passed to the callback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">qos</parametername>
</parameternamelist>
<parameterdescription>
<para>Quality of Service for the Subscription. Can be 0, 1 or 2. Also depends on what the MQTT broker supports.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a576301856ddbd4e778e0302774792df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_unsubscribe</definition>
        <argsstring>(const char *topic)</argsstring>
        <name>esp_rmaker_mqtt_unsubscribe</name>
        <param>
          <type>const char *</type>
          <declname>topic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsubscribe from MQTT topic</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">topic</parametername>
</parameternamelist>
<parameterdescription>
<para>Topic from which to unsubscribe.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ESP_OK on success. </para></simplesect>
<simplesect kind="return"><para>error in case of any error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1acb8e84cfedd8fdd34e738f663ee93ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t esp_rmaker_mqtt_setup</definition>
        <argsstring>(esp_rmaker_mqtt_config_t mqtt_config)</argsstring>
        <name>esp_rmaker_mqtt_setup</name>
        <param>
          <type><ref refid="structesp__rmaker__mqtt__config__t" kindref="compound">esp_rmaker_mqtt_config_t</ref></type>
          <declname>mqtt_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a6be92ca95489d911c0dad56b0937d11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void esp_rmaker_create_mqtt_topic</definition>
        <argsstring>(char *buf, size_t buf_size, const char *topic_suffix, const char *rule)</argsstring>
        <name>esp_rmaker_create_mqtt_topic</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>topic_suffix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates appropriate MQTT Topic String based on CONFIG_ESP_RMAKER_MQTT_USE_BASIC_INGEST_TOPICS <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold topic string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topic_suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>MQTT Topic suffix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rule</parametername>
</parameternamelist>
<parameterdescription>
<para>Basic Ingests Rule Name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a4cb4e2f4d6f8091819c9b87602933107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool esp_rmaker_mqtt_is_budget_available</definition>
        <argsstring>(void)</argsstring>
        <name>esp_rmaker_mqtt_is_budget_available</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if budget is available to publish an mqtt message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if budget is available </para></simplesect>
<simplesect kind="return"><para>false if budget is exhausted</para></simplesect>
<simplesect kind="note"><para><computeroutput>esp_rmaker_mqtt_publish</computeroutput> API already does this check. In addition to that, some use-cases might still need to check for this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="esp__rmaker__mqtt_8h_1a3fff7bb7eb3fd580bc5da22c3e32e5cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool esp_rmaker_is_mqtt_connected</definition>
        <argsstring>()</argsstring>
        <name>esp_rmaker_is_mqtt_connected</name>
        <briefdescription>
<para>Check if device is connected to MQTT Server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if device is connected </para></simplesect>
<simplesect kind="return"><para>false if device is not connected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h" line="121" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Espressif<sp/>Systems<sp/>(Shanghai)<sp/>PTE<sp/>LTD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_err.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_rmaker_mqtt_glue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="structesp__rmaker__mqtt__conn__params__t" kindref="compound">esp_rmaker_mqtt_conn_params_t</ref><sp/>*esp_rmaker_mqtt_get_conn_params(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_init(<ref refid="structesp__rmaker__mqtt__conn__params__t" kindref="compound">esp_rmaker_mqtt_conn_params_t</ref><sp/>*conn_params);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Deinitialize<sp/>ESP<sp/>RainMaker<sp/>MQTT</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Call<sp/>this<sp/>function<sp/>after<sp/>MQTT<sp/>has<sp/>disconnected.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>esp_rmaker_mqtt_deinit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_connect(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_disconnect(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_publish(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_len,<sp/>uint8_t<sp/>qos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*msg_id);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_subscribe(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic,<sp/>esp_rmaker_mqtt_subscribe_cb_t<sp/>cb,<sp/>uint8_t<sp/>qos,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*priv_data);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_unsubscribe(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">esp_err_t<sp/>esp_rmaker_mqtt_setup(<ref refid="structesp__rmaker__mqtt__config__t" kindref="compound">esp_rmaker_mqtt_config_t</ref><sp/>mqtt_config);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>esp_rmaker_create_mqtt_topic(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*topic_suffix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rule);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>esp_rmaker_mqtt_is_budget_available(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>esp_rmaker_is_mqtt_connected();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/wangfang/github/esp-rainmaker/components/esp_rainmaker/include/esp_rmaker_mqtt.h"/>
  </compounddef>
</doxygen>
